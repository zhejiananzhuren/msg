//protoc --go_out=plugins=grpc:. msg.proto
syntax = "proto3";
package msg;

enum MSGTYPE //主从消息类型
{
    VOID = 0; //无用
    MAINCMD = 1; //框架消息
    SUBCMD = 2; //逻辑消息
}

// 错误类型
enum ErrorType
{
    VOID3 = 0;
    LoginFaild = 1; //登陆失败
    MatchFaild = 2; //匹配失败
    ServefError = 3; //服务器错误
    ServerFull = 4; //服务器满了
    EntranceRestrict = 5; //用户不满足入房条件
    Kicked = 6; //用户被踢
    ShutDown = 7; //服务器关闭
    GameDown = 40807; //游戏下线
    GameMaintenance = 40808; //游戏维护
    AgentClose = 44444; //业主下线
    UserBlock = 40403; //用户冻结
}

enum CMDKIND //消息种类
{
    //心跳 --网关通知游戏
    HEART = 0;
    //上线消息 ---网关通知游戏
    ONLINE = 1;
    //离开消息 ---游戏通知网关
    LEAVE_ROOM = 2;
    //用户断线消息 --网关通知游戏
    EXIT = 3;
    //逻辑消息 ---网关逻辑消息
    LOGIC = 4;
    //用户点控变化
    PROB = 5;
    //进入房间
    INTO_TABLE = 6;
}

//服务器通知客户端消息[0]
message S2CNoticeMsg{
    //命令
    int32 cmd = 1;
    //用户ID
    int64 userId = 2;
    //消息体
    bytes body = 3;
    //消息id
    int64 msgId = 4;
}

//跑马灯[]
message S2CMarqueeConfigs {
    repeated MarqueeConfig MarqueeConfigs = 1;
}

//游戏逻辑消息
message FrameMsg{
    int32 mainCmd = 1;  //主消息协议
    int32 subCmd = 2;   //次消息协议
    bytes buff = 3;     //数据流
    int64 Time = 4;     //发出时间
}

//错误消息[]
message S2CGeneralError{
    ErrorType eType = 1; //错误类型
    string descript = 2; //描述
}


//用户余额[]
message S2CBalance{
    int64 balance = 1;
}


//用户离开[]
message S2CLeave{
    //用户ID
    int64 userId = 1;
}


///////////以下是客户端发到服务器的消息
message C2SNoticeMsg {
    //命令
    int32 cmd = 1;
    //用户ID
    int64 userId = 2;
    //客户端唯一标示
    string token = 3;
    //消息体
    bytes body = 4;
    //消息id
    int64 msgId = 5;
}

message C2SCreateTable {
    int64 sb = 1;
    int64 buyin = 2;
}

message C2SIntoTable {
    int64 tableId = 1;
}

message GameLog {
    int64 userId = 2;
    string content = 3;
}

//游戏日志
message C2SGameLog {
    string matchId = 1;
    int64 gameId = 2;
    repeated GameLog GameLogs = 3;
}

//跑马灯配置
message MarqueeConfig {
    int64 platformId = 1;
    int64 amountLimit = 2;
    string content = 3;
    string roomId = 4;
    int64 ruleId = 5;
    string specialCondition = 6;
}

//跑马灯
message C2SMarquee {
      //游戏id
      int64 gameId = 1;
      //业主id
      int64 platformId = 2;
      //广播内容
      string content = 3;
      //规则id 来自config
      int64 ruleId = 4;
}
